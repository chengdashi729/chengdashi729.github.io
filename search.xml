<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hadoop 大数据集群的搭建以及使用</title>
      <link href="/2022/05/16/hadoop/"/>
      <url>/2022/05/16/hadoop/</url>
      
        <content type="html"><![CDATA[<h1 id="1-hadoop集群搭建及使用"><a href="#1-hadoop集群搭建及使用" class="headerlink" title="1.hadoop集群搭建及使用"></a>1.hadoop集群搭建及使用</h1><h2 id="1-集群规划；"><a href="#1-集群规划；" class="headerlink" title="(1).集群规划；"></a>(1).集群规划；</h2><p><img src="/2022/05/16/hadoop/image-20220516121650308.png" alt="image-20220516121650308"></p><h2 id="2-虚拟机准备；"><a href="#2-虚拟机准备；" class="headerlink" title="(2).虚拟机准备；"></a>(2).虚拟机准备；</h2><h3 id="1、创建虚拟机（具体步骤不再展示）；"><a href="#1、创建虚拟机（具体步骤不再展示）；" class="headerlink" title="1、创建虚拟机（具体步骤不再展示）；"></a>1、创建虚拟机（具体步骤不再展示）；</h3><p><img src="/2022/05/16/hadoop/image-20220516121741768.png" alt="image-20220516121741768"> </p><h3 id="2-、配置网络；"><a href="#2-、配置网络；" class="headerlink" title="2 、配置网络；"></a>2 、配置网络；</h3><h4 id="ping外网：ping-baidu-com"><a href="#ping外网：ping-baidu-com" class="headerlink" title="ping外网：ping baidu.com"></a>ping外网：ping baidu.com</h4><p><img src="/2022/05/16/hadoop/image-20220516121747924.png" alt="image-20220516121747924"> </p><h4 id="如果ping不通"><a href="#如果ping不通" class="headerlink" title="如果ping不通"></a>如果ping不通</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#修改如下文件：</span><span class="token function">vi</span> /etc/sysconfig/network-scripts/ifcfg-ens-33</code></pre><p><img src="/2022/05/16/hadoop/image-20220516121754932.png" alt="image-20220516121754932"> </p><h4 id="重启网络服务："><a href="#重启网络服务：" class="headerlink" title="重启网络服务："></a>重启网络服务：</h4><p>service network restart</p><p><img src="/2022/05/16/hadoop/image-20220516121802380.png" alt="image-20220516121802380"> </p><h4 id="配置静态IP："><a href="#配置静态IP：" class="headerlink" title="配置静态IP："></a>配置静态IP：</h4><p>打开VMware-&gt;编辑-&gt;虚拟机网络编辑器</p><p><img src="/2022/05/16/hadoop/image-20220516121810372.png" alt="image-20220516121810372"> </p><p><img src="/2022/05/16/hadoop/image-20220516121816889.png" alt="image-20220516121816889"> </p><p><img src="/2022/05/16/hadoop/image-20220516121824390.png" alt="image-20220516121824390"> </p><p>查看IP：ip addr</p><p><img src="/2022/05/16/hadoop/image-20220516140004855.png" alt="image-20220516140004855"> </p><h4 id="修改网卡的配置文件"><a href="#修改网卡的配置文件" class="headerlink" title="修改网卡的配置文件"></a>修改网卡的配置文件</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> /etc/sysconfig/network-scripts/ifcfg-ens-33<span class="token comment">#修改并添加：（IP为静态）</span><span class="token assign-left variable">BOOTPROTO</span><span class="token operator">=</span>static<span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.246.132<span class="token assign-left variable">GATEWAY</span><span class="token operator">=</span><span class="token number">192.168</span>.246.2<span class="token assign-left variable">DNS1</span><span class="token operator">=</span><span class="token number">192.168</span>.246.2</code></pre><p>如图所示</p><p><img src="/2022/05/16/hadoop/image-20220516121832458.png" alt="image-20220516121832458"> </p><p>重启网络服务：service network restart</p><p>ping外网（查看是否可以ping通）：ping baidu.com </p><h3 id="3-克隆两台上述已配置的虚拟机；"><a href="#3-克隆两台上述已配置的虚拟机；" class="headerlink" title="3).克隆两台上述已配置的虚拟机；"></a>3).克隆两台上述已配置的虚拟机；</h3><p>关闭虚拟机：</p><p><img src="/2022/05/16/hadoop/image-20220516121836984.png" alt="image-20220516121836984"> </p><p>点击下一页，</p><p>选择克隆类型时，创建完整克隆：</p><p><img src="/2022/05/16/hadoop/image-20220516121842574.png" alt="image-20220516121842574"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#打开第二、三台虚拟机，进入：</span><span class="token function">vi</span> /etc/sysconfig/network-scripts/ifcfg-ens-33<span class="token comment">#更改</span><span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.246.133  <span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.246.134</code></pre><p><img src="/2022/05/16/hadoop/image-20220516121847510.png" alt="image-20220516121847510"> </p><p>重启网络服务并查看是否可以ping通外网。</p><h2 id="3-修改主机名；"><a href="#3-修改主机名；" class="headerlink" title="(3).修改主机名；"></a>(3).修改主机名；</h2><p>查看主机名：hostname</p><p>修改第一台主机名：sudo hostnamectl set-hostname hadoop1</p><p><img src="/2022/05/16/hadoop/image-20220516121854101.png" alt="image-20220516121854101"> </p><p>修改第二台主机名：sudo hostnamectl set-hostname hadoop2</p><p><img src="/2022/05/16/hadoop/image-20220516121858625.png" alt="image-20220516121858625"> </p><p>修改第三台主机名：sudo hostnamectl set-hostname hadoop3</p><p><img src="/2022/05/16/hadoop/image-20220516121903823.png" alt="image-20220516121903823"> </p><p>三台都要修改ip与主机名的映射：sudo vi &#x2F;etc&#x2F;hosts</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#添加：</span><span class="token number">192.168</span>.246.132 hadoop1<span class="token number">192.168</span>.246.134 hadoop2<span class="token number">192.168</span>.246.133 hadoop3</code></pre><p><img src="/2022/05/16/hadoop/image-20220516121908682.png" alt="image-20220516121908682"> </p><p>重启虚拟机生效：reboot</p><h2 id="4-配置免密登录"><a href="#4-配置免密登录" class="headerlink" title="(4).配置免密登录"></a>(4).配置免密登录</h2><p>在hadoop1机器上操作：ssh-keygen -t rsa</p><p>执行命令后，连续敲击三次回车键，生成公钥</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#拷贝公钥：</span>ssh-copy-id hadoop1ssh-copy-id hadoop2ssh-copy-id hadoop3</code></pre><p>由于我已拷贝过，所以显示已存在</p><p><img src="/2022/05/16/hadoop/image-20220516121913155.png" alt="image-20220516121913155"> </p><p>进入hadoop2、hadoop3同样操作，实现可以使用ssh hadoop2、ssh hadoop3，不需要密码就能进入hadoop2、hadoop3</p><p><img src="/2022/05/16/hadoop/image-20220516121917445.png" alt="image-20220516121917445"> </p><h2 id="5-编写分发脚本；"><a href="#5-编写分发脚本；" class="headerlink" title="(5).编写分发脚本；"></a>(5).编写分发脚本；</h2><p>输入：rsync –help</p><p><img src="/2022/05/16/hadoop/image-20220516121922280.png" alt="image-20220516121922280"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#三台虚拟机安装rsync命令：</span><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token function">rsync</span> -y<span class="token comment">#rsync与scp区别：用rsync做文件的复制比scp快，rsync只对差异文件作更新</span><span class="token comment">#在主目录创建bin目录：</span><span class="token function">mkdir</span> ~/bin<span class="token comment">#创建分发脚本脚本：</span><span class="token function">vim</span> ~/bin/xsync</code></pre><p>脚本内容如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash </span><span class="token comment">#1. 判断参数个数</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> -lt <span class="token number">1</span> <span class="token punctuation">]</span><span class="token keyword">then</span>     <span class="token builtin class-name">echo</span> Not Enough Arguement<span class="token operator">!</span>    <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span class="token keyword">fi</span><span class="token comment">#2. 遍历集群所有机器</span><span class="token comment">#注意，如果你的主机名命名和我不一样，下面这三个更换成你的主机名</span><span class="token keyword">for</span> <span class="token for-or-select variable">host</span> <span class="token keyword">in</span> hadoop1 hadoop2 hadoop3<span class="token keyword">do</span>     <span class="token builtin class-name">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>  <span class="token variable">$host</span>  <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>        <span class="token comment">#3. 遍历所有目录，挨个发送</span>    <span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token variable">$@</span>    <span class="token keyword">do</span>    <span class="token comment">#4 判断文件是否存在</span>        <span class="token keyword">if</span> <span class="token punctuation">[</span> -e <span class="token variable">$file</span> <span class="token punctuation">]</span>            <span class="token keyword">then</span>             <span class="token comment">#5. 获取父目录</span>                <span class="token assign-left variable">pdir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">cd</span> -P <span class="token punctuation">$(</span>dirname $file<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>                <span class="token assign-left variable">fname</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> $file<span class="token variable">)</span></span>                <span class="token function">ssh</span> <span class="token variable">$host</span> <span class="token string">"mkdir -p <span class="token variable">$pdir</span>"</span>                <span class="token function">rsync</span> -av <span class="token variable">$pdir</span>/<span class="token variable">$fname</span> <span class="token variable">$host</span><span class="token builtin class-name">:</span><span class="token variable">$pdir</span>            <span class="token keyword">else</span>                <span class="token builtin class-name">echo</span> <span class="token variable">$file</span> does not exists<span class="token operator">!</span>                        <span class="token keyword">fi</span>    <span class="token keyword">done</span><span class="token keyword">done</span>    </code></pre><p><img src="/2022/05/16/hadoop/image-20220516121927761.png" alt="image-20220516121927761"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#修改权限：</span><span class="token function">chmod</span> +x ~/bin/xsync<span class="token comment">#测试：把xsync命令发送到hadoop2、hadoop3</span><span class="token comment">#进入目录：</span><span class="token builtin class-name">cd</span> ~/bin<span class="token comment">#将xsync脚本发送到hadoop2、hadoop3：</span>xsync xsync</code></pre><p><img src="/2022/05/16/hadoop/image-20220516121932285.png" alt="image-20220516121932285"> </p><h2 id="6-安装JDK"><a href="#6-安装JDK" class="headerlink" title="(6).安装JDK;"></a>(6).安装JDK;</h2><p>进入官网下载匹配的jdk8安装包，上传至linux：cd</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> soft<span class="token function">mkdir</span> installfile<span class="token builtin class-name">cd</span> ~/installfile</code></pre><p><img src="/2022/05/16/hadoop/image-20220516121937403.png" alt="image-20220516121937403"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#解压：</span><span class="token function">tar</span> -zxvf jdk-8u281-linux-x64.tar.gz.crdownload -C ~/soft<span class="token comment">#切换到soft目录下：</span><span class="token builtin class-name">cd</span> /root/soft<span class="token comment">#创建软连接：</span><span class="token function">ln</span> -s jdk1.8.0_281 jdk</code></pre><p><img src="/2022/05/16/hadoop/image-20220516121942242.png" alt="image-20220516121942242"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#配置环境变量：</span><span class="token function">vi</span> ~/.bashrc<span class="token comment">#内容如下：</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=~</span>/soft/jdk<span class="token builtin class-name">export</span> <span class="token assign-left variable">JRE_HOME</span><span class="token operator">=</span><span class="token variable">$&#123;JAVA_HOME&#125;</span>/jre<span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span>.:<span class="token variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="token variable">$&#123;JRE_HOME&#125;</span>/lib<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="token environment constant">$PATH</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516121946353.png" alt="image-20220516121946353"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#让环境变量生效：</span><span class="token builtin class-name">source</span> ~/.bashrc<span class="token comment">#验证：</span>java -version</code></pre><p><img src="/2022/05/16/hadoop/image-20220516121950307.png" alt="image-20220516121950307"> </p><p>进入hadoop2、hadoop3按照上述步骤配置jdk、环境变量并验证</p><h2 id="7-安装hadoop"><a href="#7-安装hadoop" class="headerlink" title="(7).安装hadoop"></a>(7).安装hadoop</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换至installfile目录解压hadoop安装包：</span><span class="token builtin class-name">cd</span> /root/installfile<span class="token comment">#解压至soft目录下</span><span class="token function">tar</span> -zxvf hadoop-3.1.3.tar.gz -C ~/soft<span class="token comment">#切换至soft目录：</span><span class="token builtin class-name">cd</span> /root/soft<span class="token comment">#创建软连接：</span><span class="token function">ln</span> -s hadoop-3.1.3 hadoop</code></pre><p><img src="/2022/05/16/hadoop/image-20220516121954599.png" alt="image-20220516121954599"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#配置环境变量：</span><span class="token function">vi</span> ~/.bashrc<span class="token comment">#内容如下：</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=~</span>/soft/hadoop<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$HADOOP_HOME</span>/bin:<span class="token variable">$HADOOP_HOME</span>/sbin</code></pre><p><img src="/2022/05/16/hadoop/image-20220516121958454.png" alt="image-20220516121958454"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#让环境变量生效：</span><span class="token builtin class-name">source</span> ~/.bashrc<span class="token comment">#验证：</span>hadoop version</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122002381.png" alt="image-20220516122002381"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#进入hadoop配置目录：</span><span class="token builtin class-name">cd</span> <span class="token variable">$HADOOP_HOME</span>/etc/hadoop<span class="token comment">#在hadoop-env.sh中配置JAVA_HOME路径：</span><span class="token function">vi</span> hadoop-env.sh</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122006516.png" alt="image-20220516122006516"> </p><p>配置core-site.xml：vi core-site.xml</p><p>在<configuration>和</configuration>之间添加如下内容：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/opt/hadoop_data/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Abase for other temporary directories.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.default.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token comment">&lt;!-- hadoop1的内网IP地址 --></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hadoop1:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 指定NameNode的地址 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hadoop1:8020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122011920.png" alt="image-20220516122011920"> </p><p>配置hdfs-site.xml：vi hdfs-site.xml</p><p>在<configuration>和</configuration>之间添加如下内容：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 指定NameNode的web端访问地址 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoop1:9870<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 设置SecondaryNameNode(2NN)的web端访问地址 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.secondary.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoop3:9868<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.name.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/opt/hadoop_data/dfs/name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Path on the local filesystem where theNameNode stores the namespace and transactions logs persistently.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.data.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/opt/hadoop_data/dfs/data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Comma separated list of paths on the localfilesystem of a DataNode where it should store its blocks.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.permissions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>need not permissions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122016807.png" alt="image-20220516122016807"> </p><p><img src="/2022/05/16/hadoop/image-20220516122021019.png" alt="image-20220516122021019"> </p><p>配置yarn-site.xml：vi yarn-site.xml</p><p>在<configuration>和</configuration>之间添加如下内容：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>-- 指定MapReduce走shuffle --<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.nodemanager.aux-services<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span>mapreduce_shuffle<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>-- 指定ResourceManager的地址 --<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.resourcemanager.hostname<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span>hadoop<span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>description<span class="token operator">></span>The address of the applications manager interface <span class="token keyword">in</span> the RM.<span class="token operator">&lt;</span>/description<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.resourcemanager.address<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token variable">$&#123;yarn.resourcemanager.hostname&#125;</span>:803<span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>description<span class="token operator">></span>The address of the scheduler interface.<span class="token operator">&lt;</span>/description<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.resourcemanager.scheduler.address<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token variable">$&#123;yarn.resourcemanager.hostname&#125;</span>:803<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>description<span class="token operator">></span>The http address of the RM web application.<span class="token operator">&lt;</span>/description<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.resourcemanager.webapp.address<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token variable">$&#123;yarn.resourcemanager.hostname&#125;</span>:808<span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>description<span class="token operator">></span>The https adddress of the RM web application.<span class="token operator">&lt;</span>/description<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.resourcemanager.webapp.https.address<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token variable">$&#123;yarn.resourcemanager.hostname&#125;</span>:809<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.resourcemanager.resource-tracker.address<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token variable">$&#123;yarn.resourcemanager.hostname&#125;</span>:803<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>description<span class="token operator">></span>The address of the RM admin interface.<span class="token operator">&lt;</span>/description<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.resourcemanager.admin.address<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token variable">$&#123;yarn.resourcemanager.hostname&#125;</span>:803<span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.scheduler.maximum-allocation-mb<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token number">204</span><span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>/value<span class="token operator">></span>  <span class="token operator">&lt;</span>discription<span class="token operator">></span>每个节点可用内存,单位MB,默认8182MB<span class="token operator">&lt;</span>/discription<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.nodemanager.vmem-pmem-ratio<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token number">2</span>.<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.nodemanager.resource.memory-mb<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token number">204</span><span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span>  <span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.nodemanager.vmem-check-enabled<span class="token operator">&lt;</span>/name<span class="token operator">></span>  <span class="token operator">&lt;</span>value<span class="token operator">></span>false<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122026970.png" alt="image-20220516122026970"> </p><p><img src="/2022/05/16/hadoop/image-20220516122030561.png" alt="image-20220516122030561"> </p><p><img src="/2022/05/16/hadoop/image-20220516122034104.png" alt="image-20220516122034104"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#复制并且配置mapred-site.xml：</span><span class="token function">cp</span> mapred-site.xml mapred-site.xml.template<span class="token function">vi</span> mapred-site.xml</code></pre><p>在<configuration>和</configuration>之间添加如下内容：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 指定MapReduce程序运行在Yarn上的地址 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapred.job.tracker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoop1:49001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapred.local.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/opt/hadoop_data/var<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.app.mapreduce.am.env<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>HADOOP_MAPRED_HOME=/root/soft/hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.map.env<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>HADOOP_MAPRED_HOME=/root/soft/hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.reduce.env<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>HADOOP_MAPRED_HOME=/root/soft/hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122039094.png" alt="image-20220516122039094"> </p><p>配置workers，将三个主机名添加进去：vi workers</p><p><img src="/2022/05/16/hadoop/image-20220516122042633.png" alt="image-20220516122042633"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#进入/sbin目录下：</span><span class="token builtin class-name">cd</span> /root/soft/sbin/<span class="token comment">#修改start-dfs.sh和stop-dfs.sh在这两个文件开头加如下内容：</span><span class="token assign-left variable">HDFS_DATANODE_USER</span><span class="token operator">=</span>root<span class="token assign-left variable">HADOOP_SECURE_SECURE_USER</span><span class="token operator">=</span>root<span class="token assign-left variable">HDFS_NAMENODE_USER</span><span class="token operator">=</span>root<span class="token assign-left variable">HDFS_SECONDARYNAMENODE_USER</span><span class="token operator">=</span>root</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122046435.png" alt="image-20220516122046435"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#修改start-yarn.sh和stop-yarn.sh在这两个文件开头加如下内容：</span><span class="token assign-left variable">YARN_RESOURCEMANAGER_USER</span><span class="token operator">=</span>root<span class="token assign-left variable">HADOOP_SECURE_DN_USER</span><span class="token operator">=</span>root<span class="token assign-left variable">YARN_NODEMANAGER_USER</span><span class="token operator">=</span>root</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122050361.png" alt="image-20220516122050361"> </p><p>切换到soft目录下：cd &#x2F;root&#x2F;soft</p><p>使用xsync脚本将hadoop-3.1.3发送到hadoop2、hadoop3：</p><p><img src="/2022/05/16/hadoop/image-20220516122054081.png" alt="image-20220516122054081"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换hadoop2、hadoop3在soft目录下创建hadoop-3.1.3的软连接：</span><span class="token function">ln</span> -s hadoop-3.1.3 hadoop<span class="token comment">#配置hadoop环境变量：</span><span class="token function">vi</span> ~/.bashrc<span class="token comment">#内容如下：</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=~</span>/soft/hadoop<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$HADOOP_HOME</span>/bin:<span class="token variable">$HADOOP_HOME</span>/sbin<span class="token comment">#让环境变量生效：</span><span class="token builtin class-name">source</span> ~/.bashrc<span class="token comment">#验证：</span>hadoop version</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122058346.png" alt="image-20220516122058346"> </p><p><img src="/2022/05/16/hadoop/image-20220516122102094.png" alt="image-20220516122102094"> </p><h2 id="8-启动hadoop"><a href="#8-启动hadoop" class="headerlink" title="(8).启动hadoop"></a>(8).启动hadoop</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#格式化hadoop：</span>hadoop namenode -format</code></pre><p>注：hadoop只能格式化一次，在下面出现successfully formatted为格式化成功，这里由于我已经格式化了，就不附截图了。</p><p>在hadoop1启动hdfs：start-dfs.sh</p><p><img src="/2022/05/16/hadoop/image-20220516122107291.png" alt="image-20220516122107291"> </p><p>在hadoop2启动yarn：start-yarn.sh</p><p><img src="/2022/05/16/hadoop/image-20220516122112228.png" alt="image-20220516122112228"> </p><p>验证进程：</p><p>在hadoop1、hadoop2、hadoop3分别输入：jps</p><p><img src="/2022/05/16/hadoop/image-20220516122116494.png" alt="image-20220516122116494"> </p><p><img src="/2022/05/16/hadoop/image-20220516122120013.png" alt="image-20220516122120013"> </p><p><img src="/2022/05/16/hadoop/image-20220516122123607.png" alt="image-20220516122123607"> </p><p>关闭防火墙：systemctl stop firewalld</p><p>在浏览器输入：192.168.246.132:9870</p><p><img src="/2022/05/16/hadoop/image-20220516140133885.png" alt="image-20220516140133885"> </p><p><img src="/2022/05/16/hadoop/image-20220516122128674.png" alt="image-20220516122128674"> </p><p>在浏览器输入：192.168.246.134:8088</p><p><img src="/2022/05/16/hadoop/image-20220516122132496.png" alt="image-20220516122132496"> </p><p>在浏览器端可查看每台服务器状态：</p><p><img src="/2022/05/16/hadoop/image-20220516122138080.png" alt="image-20220516122138080"> </p><h2 id="9-简单使用hadoop"><a href="#9-简单使用hadoop" class="headerlink" title="(9).简单使用hadoop"></a>(9).简单使用hadoop</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看hdfs的根目录：</span>hdfs dfs -ls /</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122143737.png" alt="image-20220516122143737"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#在根目录下创建文件夹：</span>hdfs dfs -mkdir /data</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122147922.png" alt="image-20220516122147922"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#将linux本地文件上传到hdfs：</span>hdfs dfs -put emp.csv /</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122151618.png" alt="image-20220516122151618"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#移动emp.csv的位置到/data目录下：</span>hdfs dfs -mv /emp.csv /data</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122155106.png" alt="image-20220516122155106"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#将data目录下的emp.csv复制到hdfs的根目录下：</span>hdfs dfs -cp /data/emp.csv /emp-copy.csv</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122159630.png" alt="image-20220516122159630"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看emp.csv文件内容：</span>hdfs dfs -cat /emp-copy.csv</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122204310.png" alt="image-20220516122204310"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#删除文件emp-copy.csv：</span>hdfs dfs -rm /emp-copy.csv <span class="token comment">#删除data文件夹:</span>hdfs dfs -rm -r /data</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122209350.png" alt="image-20220516122209350"> </p><p><img src="/2022/05/16/hadoop/image-20220516122212683.png" alt="image-20220516122212683"> </p><p>使用wordcount脚本（自己编写的），对某个文件里面的字符进行统计</p><p>在linux本地创建1.txt文件并上传到hdfs根目录下的input（上面已有步骤，直接附截图）：</p><p><img src="/2022/05/16/hadoop/image-20220516122216665.png" alt="image-20220516122216665"> </p><p><img src="/2022/05/16/hadoop/image-20220516122220619.png" alt="image-20220516122220619"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#运行脚本：</span>hadoop jar wordcount-1.0-SNAPSHOT.jar org.example.MyMain /input/1.txt /output/wordcount</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122224444.png" alt="image-20220516122224444"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看结果：</span>hdfs dfs -cat /output/wordcount/part-r-00000</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122228709.png" alt="image-20220516122228709"> </p><p>在浏览器界面（9870）也可查看hdfs的文件存放情况：</p><p><img src="/2022/05/16/hadoop/image-20220516122232821.png" alt="image-20220516122232821"> </p><h1 id="2-ZooKeeper集群搭建及使用"><a href="#2-ZooKeeper集群搭建及使用" class="headerlink" title="2.ZooKeeper集群搭建及使用"></a>2.ZooKeeper集群搭建及使用</h1><h2 id="1-下载zookeeper安装包并解压"><a href="#1-下载zookeeper安装包并解压" class="headerlink" title="(1).下载zookeeper安装包并解压"></a>(1).下载zookeeper安装包并解压</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> -zxvf zookeeper-3.4.9.tar.gz -C ~/soft</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122236855.png" alt="image-20220516122236855"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换至soft目录：</span><span class="token builtin class-name">cd</span> /root/soft<span class="token comment">#创建软连接：</span><span class="token function">ln</span> -s zookeeper-3.4.9 zookeeper<span class="token comment">#同步zookeeper至其他机器：</span>xsync zookeeper-3.4.9</code></pre><p>切换hadoop2、hadoop3创建软连接</p><h2 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="(2).配置环境变量"></a>(2).配置环境变量</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> ~/.bashrc<span class="token comment">#内容如下：</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">ZOOKEEPER_HOME</span><span class="token operator">=</span>/root/soft/zookeeper<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$ZOOKEEPER_HOME</span>/bin:<span class="token environment constant">$PATH</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122242022.png" alt="image-20220516122242022"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#让环境变量生效：</span><span class="token builtin class-name">source</span> ~/.bashrc</code></pre><p>每一台都需要配置环境变量，在hadoop2、hadoop3重复（2）步骤</p><p><img src="/2022/05/16/hadoop/image-20220516122246648.png" alt="image-20220516122246648"> </p><h2 id="3-配置zoo-cfg"><a href="#3-配置zoo-cfg" class="headerlink" title="(3).配置zoo.cfg"></a>(3).配置zoo.cfg</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#进入conf目录：</span><span class="token builtin class-name">cd</span> zookeeper/conf/<span class="token comment">#复制zoo_sample.cf：</span><span class="token function">cp</span> zoo_sample.cfg zoo.cfg</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122251044.png" alt="image-20220516122251044"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#编辑zoo.cfg：</span><span class="token function">vi</span> zoo.cfg<span class="token comment">#修改：</span><span class="token assign-left variable">dataDir</span><span class="token operator">=</span>/root/soft/zookeeper/tmp</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122255307.png" alt="image-20220516122255307"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#末尾添加：</span>server.1<span class="token operator">=</span>hadoop1:2888:3888server.2<span class="token operator">=</span>hadoop2:2888:3888server.3<span class="token operator">=</span>hadoop3:2888:3888</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122258768.png" alt="image-20220516122258768"> </p><p>server.A&#x3D;B: C: D。</p><p>A:机器编号  </p><p>B:主机名  </p><p>C: Leader与Follower的访问端口 </p><p>D:选举Leader接口</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#同步zoo.cfg：</span>xsync zoo.cfg</code></pre><p>配置服务器编号：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#进入zookeeper：</span><span class="token builtin class-name">cd</span> <span class="token variable">$ZOOKEEPER_HOME</span><span class="token comment">#创建数据存放目录：</span><span class="token function">mkdir</span> zkData<span class="token comment">#编辑myid：.</span><span class="token function">vi</span> zkData/myid</code></pre><p>内容为：1</p><p><img src="/2022/05/16/hadoop/image-20220516122303679.png" alt="image-20220516122303679"> </p><p><img src="/2022/05/16/hadoop/image-20220516122307298.png" alt="image-20220516122307298"> </p><p>在hadoop2中的myid添加内容为：2</p><p>在hadoop3中的myid添加内容为：3</p><h2 id="4-编写zookeeper脚本"><a href="#4-编写zookeeper脚本" class="headerlink" title="(4).编写zookeeper脚本"></a>(4).编写zookeeper脚本</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#进入bin目录下：</span><span class="token builtin class-name">cd</span> ~/bin<span class="token comment">#创建脚本：</span><span class="token function">vi</span> zk.sh</code></pre><p>内容如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop1 hadoop2 hadoop3  <span class="token keyword">do</span>​    <span class="token builtin class-name">echo</span> <span class="token string">" --------启动 <span class="token variable">$i</span> zookeeper-------"</span>​    <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"zkServer.sh start "</span>  <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"stop"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop1 hadoop2 hadoop3  <span class="token keyword">do</span>​    <span class="token builtin class-name">echo</span> <span class="token string">" --------停止 <span class="token variable">$i</span> zookeeper-------"</span>​    <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"zkServer.sh stop"</span>  <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"status"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop1 hadoop2 hadoop3  <span class="token keyword">do</span>​    <span class="token builtin class-name">echo</span> <span class="token string">" --------状态 <span class="token variable">$i</span> zookeeper-------"</span>​    <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"zkServer.sh status"</span>  <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122311485.png" alt="image-20220516122311485"> </p><p>添加脚本执行权限：chmod u+x zk.sh</p><p><img src="/2022/05/16/hadoop/image-20220516122316821.png" alt="image-20220516122316821"> </p><h2 id="5-启动zookeeper集群"><a href="#5-启动zookeeper集群" class="headerlink" title="(5).启动zookeeper集群"></a>(5).启动zookeeper集群</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#启动zookeeper集群：</span>zk.sh start</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122320281.png" alt="image-20220516122320281"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看各机器状态：</span>zk.sh status</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122324340.png" alt="image-20220516122324340"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#停止zookeeper集群：</span>zk.sh stop</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122328422.png" alt="image-20220516122328422"> </p><h2 id="6-zookeeper集群的简单使用"><a href="#6-zookeeper集群的简单使用" class="headerlink" title="(6).zookeeper集群的简单使用"></a>(6).zookeeper集群的简单使用</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#启动zookeeper集群：</span>zk.sh start<span class="token comment">#进入zookeeper命令行：</span>zkCli.sh</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122331781.png" alt="image-20220516122331781"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#创建节点（节点有四种类型，永久节点、临时节点、永久序列化节点、临时序列化节点）：</span><span class="token comment"># -s 序列化 -e 临时节点 path  创建路径  data 节点数据</span>create <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-e<span class="token punctuation">]</span> path data  <span class="token comment">#创建demo临时节点：</span>create -e /demo <span class="token number">321</span><span class="token comment">#查看根下的所有节点：</span><span class="token function">ls</span> /</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122336640.png" alt="image-20220516122336640"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看path下所有znode,以及zonde的属性：</span>ls2 /demo</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122340206.png" alt="image-20220516122340206"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#拿到/demo的数据：</span>get /demo</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122344420.png" alt="image-20220516122344420"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#修改/demo的数据：</span><span class="token builtin class-name">set</span> /demo <span class="token number">456</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122348066.png" alt="image-20220516122348066"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#递归删除节点：</span>rmr /demo</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122352849.png" alt="image-20220516122352849"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看历史记录：</span><span class="token function">history</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122356338.png" alt="image-20220516122356338"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#退出zookeeper命令行：</span>quit</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122400137.png" alt="image-20220516122400137"> </p><h1 id="3-HBase集群搭建及使用"><a href="#3-HBase集群搭建及使用" class="headerlink" title="3.HBase集群搭建及使用"></a>3.HBase集群搭建及使用</h1><h2 id="1-查看hbase与jdk、hadoop的版本匹配；"><a href="#1-查看hbase与jdk、hadoop的版本匹配；" class="headerlink" title="(1).查看hbase与jdk、hadoop的版本匹配；"></a>(1).查看hbase与jdk、hadoop的版本匹配；</h2><p><img src="/2022/05/16/hadoop/image-20220516122405362.png" alt="image-20220516122405362"> </p><p><img src="/2022/05/16/hadoop/image-20220516122409109.png" alt="image-20220516122409109"> </p><h2 id="2-集群规划"><a href="#2-集群规划" class="headerlink" title="(2).集群规划"></a>(2).集群规划</h2><p><img src="/2022/05/16/hadoop/image-20220516122412571.png" alt="image-20220516122412571"> </p><h2 id="3-下载、解压hbase安装包"><a href="#3-下载、解压hbase安装包" class="headerlink" title="(3).下载、解压hbase安装包"></a>(3).下载、解压hbase安装包</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换到installfile：</span><span class="token builtin class-name">cd</span> /root/installfile<span class="token comment">#解压至soft目录下：</span><span class="token function">tar</span> -zxvf hbase-2.4.11-bin.tar.gz -C ~/soft</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122416499.png" alt="image-20220516122416499"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换至soft目录：</span><span class="token builtin class-name">cd</span> /root/soft<span class="token comment">#创建软连接：</span><span class="token function">ln</span> -s hbase-2.4.11 hbase<span class="token comment">#同步zookeeper至其他机器：</span>xsync hbase-2.4.11<span class="token comment">#切换hadoop2、hadoop3创建软连接</span></code></pre><p> (4).配置环境变量；</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> ~/.bashrc<span class="token comment">#内容如下：</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">HBASE_HOME</span><span class="token operator">=~</span>/soft/hbase-2.4.11<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$HBASE_HOME</span>/bin:<span class="token environment constant">$PATH</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122421127.png" alt="image-20220516122421127"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#让环境变量生效：</span><span class="token builtin class-name">source</span> ~/.bashrc<span class="token comment">#验证：</span>hbase version</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122426092.png" alt="image-20220516122426092"> </p><p>每一台都需要配置环境变量，在hadoop2、hadoop3重复（4）步骤</p><h2 id="5-配置hbase-site-xml"><a href="#5-配置hbase-site-xml" class="headerlink" title="(5).配置hbase-site.xml"></a>(5).配置hbase-site.xml</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换到conf目录：</span><span class="token builtin class-name">cd</span> <span class="token variable">$HBASE_HOME</span>/conf<span class="token comment">#编辑hbase-site.xml：</span><span class="token function">vi</span> hbase-site.xml</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122430589.png" alt="image-20220516122430589"> </p><p>在<configuration>和</configuration>之间添加如下内容：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.rootdir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hadoop1:8020/hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.cluster.distributed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.zookeeper.quorum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoop1,hadoop2,hadoop3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.zookeeper.property.dataDir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/root/soft/zookeeper/zkData<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/root/soft/hbase-2.4.11/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 在分布式的情况下一定要设置，不然容易出现Hmaster起不来的情况 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.unsafe.stream.capability.enforce<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>​    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122435139.png" alt="image-20220516122435139"> </p><h2 id="6-配置regionservers"><a href="#6-配置regionservers" class="headerlink" title="(6).配置regionservers"></a>(6).配置regionservers</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#编辑regionservers：</span><span class="token function">vi</span> regionservers <span class="token comment">#删除原有的localhost，添加如下内容： </span>hadoop1hadoop2hadoop3</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122439505.png" alt="image-20220516122439505"> </p><h2 id="7-配置备用master"><a href="#7-配置备用master" class="headerlink" title="(7).配置备用master"></a>(7).配置备用master</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#编辑backup-masters：</span><span class="token function">vi</span> backup-masters <span class="token comment">#添加内容为：</span>hadoop2</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122443768.png" alt="image-20220516122443768"> </p><p><img src="/2022/05/16/hadoop/image-20220516122447722.png" alt="image-20220516122447722"> </p><h2 id="8-软连接hadoop配置文件到hbase配置目录并分发hbase；"><a href="#8-软连接hadoop配置文件到hbase配置目录并分发hbase；" class="headerlink" title="(8).软连接hadoop配置文件到hbase配置目录并分发hbase；"></a>(8).软连接hadoop配置文件到hbase配置目录并分发hbase；</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#软连接hadoop的core-site.xml到hbase：</span><span class="token function">ln</span> -s /root/soft/etc/core-site.xml core-site.xml<span class="token comment">#软连接hadoop的hdfs-site.xml到hbase：</span><span class="token function">ln</span> -s /root/soft/etc/hdfs-site.xml hdfs-site.xml</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122452063.png" alt="image-20220516122452063"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#返回上一级目录：</span><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span><span class="token comment">#同步conf文件夹：</span>xsync conf</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122456356.png" alt="image-20220516122456356"> </p><h2 id="9-启动hbase集群"><a href="#9-启动hbase集群" class="headerlink" title="(9).启动hbase集群"></a>(9).启动hbase集群</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#启动hbase前需要先启动zookeeper、hadoop：</span>zk.sh startstart-all.shstart-hbase.sh<span class="token comment">#或者分开启动hbase：</span>hbase-daemon.sh start masterhbase-daemon.sh start regionserver</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122500574.png" alt="image-20220516122500574"> </p><p>分别在hadoop1、hadoop2、hadoop3输入jps查看节点：jps</p><p><img src="/2022/05/16/hadoop/image-20220516122505347.png" alt="image-20220516122505347"> </p><p><img src="/2022/05/16/hadoop/image-20220516122508629.png" alt="image-20220516122508629"> </p><p><img src="/2022/05/16/hadoop/image-20220516122512505.png" alt="image-20220516122512505"> </p><p><img src="/2022/05/16/hadoop/image-20220516122517185.png" alt="image-20220516122517185"> </p><p>进入浏览器查看：192.168.246.132:16010</p><p><img src="/2022/05/16/hadoop/image-20220516122524759.png" alt="image-20220516122524759"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#停止hbase集群：</span>stop-hbase.sh<span class="token comment">#如果无法关闭就分别关闭master、regionserver：</span>hbase-daemons.sh stop regionserverhbase-daemons.sh stop master</code></pre><h2 id="10-hbase集群的简单使用；"><a href="#10-hbase集群的简单使用；" class="headerlink" title="(10).hbase集群的简单使用；"></a>(10).hbase集群的简单使用；</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#启动hbase集群：</span>start-hbase.sh<span class="token comment">#进入hbase命令行：</span>hbase shell</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122531557.png" alt="image-20220516122531557"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看所有表：</span>list</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122537346.png" alt="image-20220516122537346"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#创建stu表：</span>create <span class="token string">'stu'</span>,<span class="token string">'info'</span>,<span class="token string">'no'</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122542755.png" alt="image-20220516122542755"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看表结构：</span>describe <span class="token string">'stu'</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122546736.png" alt="image-20220516122546736"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#启用或禁用表：</span>is_enabled <span class="token string">'stu'</span>is_disabled <span class="token string">'stu'</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122551001.png" alt="image-20220516122551001"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#向stu表添加数据：</span>put <span class="token string">'stu'</span>,<span class="token string">'1001'</span>,<span class="token string">'info:name'</span>,<span class="token string">'HYX'</span><span class="token comment">#扫描表数据：</span>scan <span class="token string">'stu'</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122555113.png" alt="image-20220516122555113"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#继续向stu表添加数据：</span>put <span class="token string">'stu'</span>,<span class="token string">'1002'</span>,<span class="token string">'info:name'</span>,<span class="token string">'Jack'</span>put <span class="token string">'stu'</span>,<span class="token string">'1002'</span>,<span class="token string">'info:age'</span>,<span class="token string">'22'</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122559328.png" alt="image-20220516122559328"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#统计表记录数：</span>count <span class="token string">'stu'</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122604057.png" alt="image-20220516122604057"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#删除stu表需要禁用表：</span>disable <span class="token string">'stu'</span><span class="token comment">#删除表：</span>drop <span class="token string">'stu'</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122607441.png" alt="image-20220516122607441"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#退出hbase命令行：</span><span class="token builtin class-name">exit</span> 或 quit</code></pre><h1 id="4-Kafka集群搭建及使用"><a href="#4-Kafka集群搭建及使用" class="headerlink" title="4.Kafka集群搭建及使用"></a>4.Kafka集群搭建及使用</h1><h2 id="1-集群规划"><a href="#1-集群规划" class="headerlink" title="(1).集群规划"></a>(1).集群规划</h2><p><img src="/2022/05/16/hadoop/image-20220516140250117.png" alt="image-20220516140250117"> </p><h2 id="2-下载并解压安装包"><a href="#2-下载并解压安装包" class="headerlink" title="(2).下载并解压安装包"></a>(2).下载并解压安装包</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换到installfile目录：</span><span class="token builtin class-name">cd</span> /root/installfile<span class="token comment">#解压至soft目录下：</span><span class="token function">tar</span> -zxvf kafka_2.11-2.4.1.gz -C ~/soft</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122622290.png" alt="image-20220516122622290"></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换至soft目录：</span><span class="token builtin class-name">cd</span> /root/soft<span class="token comment">#创建软连接：</span><span class="token function">ln</span> -s kafka_2.11-2.4.1 kafka<span class="token comment">#同步kafka至其他机器：</span>xsync kafka_2.11-2.4.1</code></pre><p>切换hadoop2、hadoop3创建软连接</p><h2 id="3-配置环境变量"><a href="#3-配置环境变量" class="headerlink" title="(3).配置环境变量"></a>(3).配置环境变量</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> ~/.bashrc<span class="token comment">#内容如下：</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">KAFKA_HOME</span><span class="token operator">=</span>/root/soft/kafka<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$KAFKA_HOME</span>/bin</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122628614.png" alt="image-20220516122628614"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#让环境变量生效：</span><span class="token builtin class-name">source</span> ~/.bashrc</code></pre><p>每一台都需要配置环境变量，在hadoop2、hadoop3重复（3）步骤</p><h2 id="4-分别在三台机器上创建logs目录"><a href="#4-分别在三台机器上创建logs目录" class="headerlink" title="(4).分别在三台机器上创建logs目录"></a>(4).分别在三台机器上创建logs目录</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换到kafka目录：</span><span class="token builtin class-name">cd</span> <span class="token variable">$KAFKA_HOME</span><span class="token comment">#创建logs目录：</span><span class="token function">mkdir</span> logs</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122633371.png" alt="image-20220516122633371"> </p><h2 id="5-修改配置文件server-properties"><a href="#5-修改配置文件server-properties" class="headerlink" title="(5).修改配置文件server.properties"></a>(5).修改配置文件server.properties</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换至config目录：</span><span class="token builtin class-name">cd</span> config<span class="token comment">#编辑server.properties：</span><span class="token function">vi</span> server.properties</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122637275.png" alt="image-20220516122637275"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#修改内容如下：</span>broker.id<span class="token operator">=</span><span class="token number">0</span><span class="token comment">#删除topic功能</span>delete.topic.enable<span class="token operator">=</span>truelog.dirs<span class="token operator">=</span>/root/soft/kafka/logszookeeper.connect<span class="token operator">=</span>hadoop1:2181,hadoop2:2181,hadoop3:2181/kafka</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122641096.png" alt="image-20220516122641096"> </p><p><img src="/2022/05/16/hadoop/image-20220516122644972.png" alt="image-20220516122644972"> </p><p><img src="/2022/05/16/hadoop/image-20220516122649136.png" alt="image-20220516122649136"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#分发server.properties到hadoop2、hadoop3：</span>xsync server.properties<span class="token comment">#修改hadoop2的server.properties中</span>broker.id<span class="token operator">=</span><span class="token number">1</span><span class="token comment">#修改hadoop3的server.properties中</span>broker.id<span class="token operator">=</span><span class="token number">2</span></code></pre><h2 id="6-编写kafka脚本"><a href="#6-编写kafka脚本" class="headerlink" title="(6).编写kafka脚本"></a>(6).编写kafka脚本</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#进入bin目录下：</span><span class="token builtin class-name">cd</span> ~/bin<span class="token comment">#创建脚本：</span><span class="token function">vi</span> kf.sh</code></pre><p>内容如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop1 hadoop2 hadoop3  <span class="token keyword">do</span>​    <span class="token builtin class-name">echo</span> <span class="token string">" --------启动 <span class="token variable">$i</span> Kafka-------"</span>​    <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"/root/soft/kafka/bin/kafka-server-start.sh -daemon /root/soft/kafka/config/server.properties "</span>  <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token string">"stop"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop1 hadoop2 hadoop3  <span class="token keyword">do</span>​    <span class="token builtin class-name">echo</span> <span class="token string">" --------停止 <span class="token variable">$i</span> Kafka-------"</span>​    <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">"/root/soft/kafka/bin/kafka-server-stop.sh stop"</span>  <span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">esac</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122655855.png" alt="image-20220516122655855"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#添加脚本执行权限：</span><span class="token function">chmod</span> u+x kf.sh</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122701672.png" alt="image-20220516122701672"> </p><h2 id="7-启动kafka集群"><a href="#7-启动kafka集群" class="headerlink" title="(7).启动kafka集群"></a>(7).启动kafka集群</h2><pre class="language-bash" data-language="bash"><code class="language-bash">启<span class="token comment">#动kafka集群需要先启动zookeeper集群：</span>zk.sh start <span class="token operator">|</span>  kf.sh start</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122705626.png" alt="image-20220516122705626"> </p><p>使用jps查看三台机器的节点是否启动：jps</p><p><img src="/2022/05/16/hadoop/image-20220516122709528.png" alt="image-20220516122709528"> </p><p><img src="/2022/05/16/hadoop/image-20220516122713433.png" alt="image-20220516122713433"> </p><p><img src="/2022/05/16/hadoop/image-20220516122716947.png" alt="image-20220516122716947"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#关闭kafka集群：</span>kf.sh stop</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122721107.png" alt="image-20220516122721107"> </p><h2 id="8-kafka集群的简单使用"><a href="#8-kafka集群的简单使用" class="headerlink" title="(8).kafka集群的简单使用"></a>(8).kafka集群的简单使用</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#启动kafka集群：</span>kf.sh start<span class="token comment">#进入kafka目录：</span><span class="token builtin class-name">cd</span> <span class="token variable">$KAFKA_HOME</span><span class="token comment">#查看kafka topic列表：</span>bin/kafka-topics.sh --zookeeper hadoop1:2181/kafka --list</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122725063.png" alt="image-20220516122725063"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#创建topic：</span>bin/kafka-topics.sh --zookeeper hadoop1:2181/kafka <span class="token punctuation">\</span>--create --replication-factor <span class="token number">3</span> --partitions <span class="token number">1</span> --topic demo</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122729379.png" alt="image-20220516122729379"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#删除topic：</span>bin/kafka-topics.sh --zookeeper hadoop1:2181/kafka <span class="token punctuation">\</span>--delete --topic demo</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122733878.png" alt="image-20220516122733878"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#发送消息：</span>bin/kafka-console-producer.sh <span class="token punctuation">\</span>--broker-list hadoop1:9092 --topic demo</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122737468.png" alt="image-20220516122737468"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#消费消息：</span>bin/kafka-console-consumer.sh <span class="token punctuation">\</span>--bootstrap-server hadoop1:9092 --from-beginning --topic demo</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122741682.png" alt="image-20220516122741682"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看某个topic的详情：</span>bin/kafka-topics.sh --zookeeper hadoop1:2181/kafka <span class="token punctuation">\</span> --describe --topic demo</code></pre><p><img src="/2022/05/16/hadoop/image-20220516122746568.png" alt="image-20220516122746568"> </p><p><img src="/2022/05/16/hadoop/image-20220516122750832.png" alt="image-20220516122750832"> </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#修改分区数：</span>bin/kafka-topics.sh --zookeeper hadoop1:2181/kafka --alter --topic demo --partitions <span class="token number">6</span></code></pre><p><img src="/2022/05/16/hadoop/image-20220516122757161.png" alt="image-20220516122757161"></p>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> zookeeper </tag>
            
            <tag> kafka </tag>
            
            <tag> hbase </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
